// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _03_Shop_CourseWork_;

#nullable disable

namespace _03_Shop_CourseWork_.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Grains"
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Warshav"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "New-York"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "Chikago"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 3,
                            Name = "Krakiw"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            Name = "Dallas"
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Usa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Poland"
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cashier"
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 10f,
                            IsInStock = true,
                            Name = "Tomato",
                            Price = 25m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            Discount = 5f,
                            IsInStock = true,
                            Name = "Bread",
                            Price = 15m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Discount = 1f,
                            IsInStock = true,
                            Name = "Apple",
                            Price = 12m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Discount = 25f,
                            IsInStock = false,
                            Name = "Cucumber",
                            Price = 50m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rivnenska 107",
                            CityId = 1,
                            Name = "Koshuk",
                            ParkingArea = 5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Sydorova 11a",
                            CityId = 2,
                            Name = "Khameleon",
                            ParkingArea = 4
                        },
                        new
                        {
                            Id = 3,
                            Address = "Stysa 14",
                            CityId = 3,
                            Name = "Market",
                            ParkingArea = 2
                        });
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "vitaliy-24@ukr.net",
                            Name = "Vitaliy",
                            PhoneNumber = "380965740762",
                            PositionId = 3,
                            Salary = 15000m,
                            ShopId = 1,
                            Surname = "Romanov"
                        },
                        new
                        {
                            Id = 2,
                            Email = "roma-25@ukr.net",
                            Name = "Roman",
                            PhoneNumber = "380969830762",
                            PositionId = 2,
                            Salary = 26000m,
                            ShopId = 1,
                            Surname = "Litvinko"
                        },
                        new
                        {
                            Id = 3,
                            Email = "nat-25@ukr.net",
                            Name = "Natalia",
                            PhoneNumber = "380329830762",
                            PositionId = 1,
                            Salary = 40000m,
                            ShopId = 1,
                            Surname = "Labenska"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("_03_Shop_CourseWork_.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_03_Shop_CourseWork_.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.City", b =>
                {
                    b.HasOne("_03_Shop_CourseWork_.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Product", b =>
                {
                    b.HasOne("_03_Shop_CourseWork_.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Shop", b =>
                {
                    b.HasOne("_03_Shop_CourseWork_.Entities.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Worker", b =>
                {
                    b.HasOne("_03_Shop_CourseWork_.Entities.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_03_Shop_CourseWork_.Entities.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_03_Shop_CourseWork_.Entities.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
